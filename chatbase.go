package main

import (
	"bytes"
	"encoding/json"
	"net/http"
	"time"
)

//Message represents a Chatbase Message API call. It's only exported for the JSON encoder.
type Message struct {
	Apikey     string `json:"api_key"`
	Creator    string `json:"type"`
	Userid     string `json:"user_id"`
	Platform   string `json:"platform"`
	Message    string `json:"message"`
	Intent     string `json:"intent"`
	Nothandled bool   `json:"not_handled"`
}

func chatbaseSubmit(m Message) {
	b := new(bytes.Buffer)
	json.NewEncoder(b).Encode(m)

	// Generated by curl-to-Go: https://mholt.github.io/curl-to-go

	req, err := http.NewRequest("POST", "https://chatbase.com/api/message", b)
	checkErr(err, "chatbase message request create")
	req.Header.Set("Cache-Control", "no-cache")
	req.Header.Set("Content-Type", "application/json")

	resp, err := http.DefaultClient.Do(req)
	checkErr(err, "chatbase message request submit")
	defer resp.Body.Close()
}

func getUnixMillis() int64 {
	return time.Now().UnixNano() / int64(time.Millisecond)
}
